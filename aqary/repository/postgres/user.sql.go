// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: user.sql

package postgres

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO "users"
    ("name", "phone_number")
Values ($1 , $2)
`

type CreateUserParams struct {
	Name        string `db:"name" json:"name"`
	PhoneNumber string `db:"phone_number" json:"phone_number"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.Exec(ctx, createUser, arg.Name, arg.PhoneNumber)
	return err
}

const getUser = `-- name: GetUser :one
SELECT "id", "name", "phone_number", "otp", "otp_expiration_time", "created_at", "updated_at"
FROM "users"
WHERE "phone_number" = $1
Limit 1
`

func (q *Queries) GetUser(ctx context.Context, phoneNumber string) (Users, error) {
	row := q.db.QueryRow(ctx, getUser, phoneNumber)
	var i Users
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.PhoneNumber,
		&i.Otp,
		&i.OtpExpirationTime,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateUser = `-- name: UpdateUser :exec
UPDATE "users" 
SET "otp" = $1, "otp_expiration_time" = $2 
WHERE "phone_number" = $3
`

type UpdateUserParams struct {
	Otp               sql.NullString `db:"otp" json:"otp"`
	OtpExpirationTime sql.NullTime   `db:"otp_expiration_time" json:"otp_expiration_time"`
	PhoneNumber       string         `db:"phone_number" json:"phone_number"`
}

func (q *Queries) UpdateUser(ctx context.Context, arg UpdateUserParams) error {
	_, err := q.db.Exec(ctx, updateUser, arg.Otp, arg.OtpExpirationTime, arg.PhoneNumber)
	return err
}
